{"version":3,"sources":["Form.js","ToDoList.js","App.js","index.js"],"names":["Form","state","userIp","handleSubmit","event","preventDefault","console","log","data","text","id","UUID","v4","props","onClickAdd","setState","className","this","title","onSubmit","type","placeholder","value","onChange","target","required","React","Component","ToDo","checked","handleDelete","Props","onClickDel","Id","handleChecked","todoStyle","background","padding","borderBottom","textDecoration","alignItems","justifyContent","display","flexDirection","style","width","onClick","Text","btnStyle","color","border","borderRadius","cursor","float","ToDoList","toDoList","map","todo","key","uid","App","todosList","addNewToDo","prevState","delToDo","length","filter","ReactDOM","render","document","getElementById"],"mappings":"gUAwCeA,G,iNAnCXC,MAAM,CACFC,OAAQ,I,EAGZC,aAAe,SAACC,GACZA,EAAMC,iBACNC,QAAQC,IAAI,EAAKN,MAAMC,QAKvB,IAAMM,EAAK,CAACC,KAAK,EAAKR,MAAMC,OAAQQ,GAAGC,IAAKC,MAC5C,EAAKC,MAAMC,WAAWN,GACtB,EAAKO,SAAS,CAACb,OAAQ,M,wEAGlB,IAAD,OACJ,OACI,6BACI,yBAAKc,UAAU,UAAUC,KAAKJ,MAAMK,OACpC,0BAAMC,SAAUF,KAAKd,cACrB,2BACIiB,KAAK,OACLC,YAAY,+BACZC,MAAOL,KAAKhB,MAAMC,OAClBqB,SAAU,SAAAnB,GAAK,OAAI,EAAKW,SAAS,CAAEb,OAASE,EAAMoB,OAAOF,SACzDG,UAAQ,IAEZ,kD,GA7BGC,IAAMC,Y,QCkBnBC,G,iNAEJ3B,MAAQ,CACN4B,SAAS,G,EAGXC,aAAe,WACb,EAAKjB,MAAMkB,MAAMC,WAAW,EAAKnB,MAAMoB,K,EAGzCC,cAAgB,WACd,EAAKnB,SAAS,CAACc,SAAS,EAAK5B,MAAM4B,W,wEAMnC,IAAIM,EAAU,CACZC,WAAY,UACZC,QAAS,OACTC,aAAc,kBACdC,eAAgBtB,KAAKhB,MAAM4B,QAC3B,eAAiB,OACjBW,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACTC,cAAe,UAGjB,OACE,yBAAK3B,UAAU,aAAa4B,MAAOT,GACjC,uBAAGS,MAAO,CAACC,MAAM,UACf,2BAAOzB,KAAK,WAAW0B,QAAS7B,KAAKiB,gBAAiB,IACpDjB,KAAKJ,MAAMkC,KACZ,IACD,4BAAQD,QAAS7B,KAAKa,aAAcc,MAAOI,GAA3C,Y,GAnCStB,IAAMC,YA0CnBqB,EAAU,CACdZ,WAAY,UACZa,MAAO,OACPC,OAAQ,OACRb,QAAS,UACTc,aAAc,MACdC,OAAQ,UACRC,MAAO,SAGMC,EA7DE,SAACzC,GAChB,OACE,6BACGA,EAAM0C,SAASC,KAAK,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMC,IAAKC,YAAIF,GAAOxB,GAAKwB,EAAK/C,GAAKqC,KAAMU,EAAKhD,KAAMsB,MAAOlB,SCsBjF+C,E,2MAhCX3D,MAAQ,CACJ4D,UAAU,I,EAGdC,WAAa,SAACL,GACV,EAAK1C,UAAS,SAAAgD,GAAS,MAAK,CACxBF,UAAS,sBAAOE,EAAUF,WAAjB,CAA4BJ,S,EAI7CO,QAAU,SAACxD,GACJ,EAAKP,MAAM4D,UAAUI,OAAO,IAC3B3D,QAAQC,IAAI,MAAMC,GAClB,EAAKO,SAAS,CACV8C,UAAW,EAAK5D,MAAM4D,UAAUK,QAAO,SAAUT,GAC7C,OAAOA,EAAK/C,KAAKF,S,wEAO7B,OACI,6BACI,kBAAC,EAAD,CAAMU,MAAM,cAAcJ,WAAYG,KAAK6C,aAC3C,kBAAC,EAAD,CAAUP,SAAUtC,KAAKhB,MAAM4D,UAAY7B,WAAYf,KAAK+C,e,GA3B1DrC,aCClBwC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.e9326fa6.chunk.js","sourcesContent":["import React from 'react'\r\nimport {default as UUID} from \"uuid\"\r\nimport './App.css'\r\n\r\nclass Form extends React.Component {\r\n    state={\r\n        userIp: ''\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();             // this is used to prevent default behaviour of the onSubmit i.e. page reloading\r\n        console.log(this.state.userIp);     // This value is user ip in text box\r\n        \r\n        // this value is passed from APP.js\r\n        // console.log(this.props.ip);\r\n\r\n        const data={text:this.state.userIp, id:UUID.v4()}\r\n        this.props.onClickAdd(data);\r\n        this.setState({userIp: ''})\r\n    };\r\n    \r\n    render(){        \r\n        return (\r\n            <div>\r\n                <div className=\"header\">{this.props.title}</div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Take Note before you forget!'\r\n                    value={this.state.userIp}\r\n                    onChange={event => this.setState({ userIp : event.target.value })}\r\n                    required \r\n                />\r\n                <button>Add todo</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\nimport {uid} from 'react-uid'\r\nimport './ToDo.css'\r\n\r\n// One way of creating todos\r\n\r\n// const ToDoList = () =>(\r\n//   <div>\r\n//     <ToDo {...todos[0]}/>\r\n//     <ToDo {...todos[1]}/>\r\n//   </div>\r\n// );\r\n\r\nconst ToDoList = (props) => {\r\n  return (\r\n    <div>\r\n      {props.toDoList.map( todo => <ToDo key={uid(todo)} Id={ todo.id } Text={todo.text} Props={props}/> ) }\r\n      {/* {props.toDoList.map( todo => <ToDo key={ uid(todo) } text={todo.text} /> ) } */}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass ToDo extends React.Component {\r\n\r\n  state = {\r\n    checked: false\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.props.Props.onClickDel(this.props.Id);\r\n  };\r\n\r\n  handleChecked = () => {\r\n    this.setState({checked:!this.state.checked});\r\n  };\r\n\r\n  // Each class must have render()  \r\n  render() {\r\n\r\n    let todoStyle={\r\n      background: '#f4f4f4',\r\n      padding: '10px',\r\n      borderBottom: '1px #ccc dotted',\r\n      textDecoration: this.state.checked?\r\n      'line-through' : 'none',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }\r\n\r\n    return ( // here this.props means whatever is passed to ToDo component\r\n      <div className=\"to-do-item\" style={todoStyle}>\r\n        <p style={{width:'100px'}}>\r\n          <input type=\"checkbox\" onClick={this.handleChecked}/>{' '}\r\n          { this.props.Text }\r\n          {' '}\r\n          <button onClick={this.handleDelete} style={btnStyle}>x</button>\r\n        </p>\r\n      </div>\r\n    );   \r\n  }\r\n}\r\n\r\nconst btnStyle ={\r\n  background: '#ff0000',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '5px 8px',\r\n  borderRadius: '50%',\r\n  cursor: 'pointer',\r\n  float: 'right'\r\n}\r\n\r\nexport default ToDoList;","import React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport ToDoList from './ToDoList'\r\n\r\nclass App extends Component {\r\n    // states is class field\r\n    state = {\r\n        todosList:[],\r\n    };\r\n\r\n    addNewToDo = (todo) => {\r\n        this.setState(prevState => ({\r\n            todosList : [...prevState.todosList, todo],\r\n        }));\r\n    };\r\n\r\n    delToDo = (data) => {\r\n        if(this.state.todosList.length>0) {\r\n            console.log('app',data);\r\n            this.setState({\r\n                todosList: this.state.todosList.filter(function (todo){\r\n                    return todo.id!==data;\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form title='My todo app' onClickAdd={this.addNewToDo}/>\r\n                <ToDoList toDoList={this.state.todosList } onClickDel={this.delToDo}/>   \r\n                {/* <ToDoList toDoList={this.state.todosList }/>    */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n\r\n\r\n// rce","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}